-- uhd / 32 / 4 thread --
Reset time counters for profiling

================================================================================
(enter) Test Snark for Filtering
================================================================================

(enter) Set the Images                          [             ] (0.0000s x0.98 from start)
stride? 32
(leave) Set the Images                          [19.1335s x0.28]        (19.1335s x0.28 from start)
(enter) Compute SHA256                          [             ] (19.1335s x0.28 from start)
(leave) Compute SHA256                          [0.0261s x1.00] (19.1597s x0.28 from start)
(enter) Call to generate_filtering_example      [             ] (19.1597s x0.28 from start)
cs.auxiliary_input_size: 16322 
(leave) Call to generate_r1cs_example_with_field_input  [1587453997.2041s x0.00]        (19.1641s x0.28 from start)
(enter) Call to run_snark_for_filtering         [             ] (19.1641s x0.28 from start)

================================================================================
snark for filtering Generator
================================================================================

  (enter) Call to snark for filtering generator [             ] (19.1642s x0.28 from start)
    (enter) Compute h_vector densities          [             ] (19.1660s x0.28 from start)
    (leave) Compute h_vector densities          [0.0094s x1.00] (19.1754s x0.28 from start)
    (enter) Generating G1 MSM window table      [             ] (19.1754s x0.28 from start)
      Choosing window size 10 for 8161 elements
      * G1 window: 10
    (leave) Generating G1 MSM window table      [0.0141s x1.00] (19.1895s x0.28 from start)
    (enter) Compute the h_g1_vector             [             ] (19.1895s x0.28 from start)
    . DONE!
    (leave) Compute the h_g1_vector             [0.0445s x2.96] (19.2340s x0.29 from start)
    (enter) Generating snark key pair Generator [             ] (19.2342s x0.29 from start)
      (enter) Call to snark_for_complement_generator    [             ] (19.2342s x0.29 from start)
        (enter) Call to r1cs_to_qap_instance_map_with_evaluation        [             ] (19.2351s x0.29 from start)
          (enter) Compute evaluations of A, B, C, H at t        [             ] (19.2359s x0.29 from start)
          (leave) Compute evaluations of A, B, C, H at t        [0.0196s x1.00] (19.2556s x0.29 from start)
        (leave) Call to r1cs_to_qap_instance_map_with_evaluation        [0.0205s x1.13] (19.2556s x0.29 from start)
        * QAP number of variables: 16322
        * QAP pre degree: 8161
        * QAP degree: 8192
        * QAP number of input variables: 0
        (enter) Compute query densities                 [             ] (19.2556s x0.29 from start)
        (leave) Compute query densities                 [0.0001s x1.01] (19.2557s x0.29 from start)
        (enter) Compute L query for R1CS proving key    [             ] (19.2557s x0.29 from start)
        (leave) Compute L query for R1CS proving key    [0.0023s x1.00] (19.2580s x0.29 from start)
        (enter) Generating G1 MSM window table          [             ] (19.2580s x0.29 from start)
          Choosing window size 11 for 32644 elements
          * G1 window: 11
        (leave) Generating G1 MSM window table          [0.0260s x1.00] (19.2840s x0.29 from start)
        (enter) Generating G2 MSM window table          [             ] (19.2840s x0.29 from start)
          Choosing window size 10 for 8161 elements
          * G2 window: 10
        (leave) Generating G2 MSM window table          [0.0388s x1.00] (19.3228s x0.29 from start)
        (enter) Generate R1CS proving key               [             ] (19.3228s x0.29 from start)
          (enter) Generate queries                      [             ] (19.3238s x0.29 from start)
            (enter) Compute the A-query                 [             ] (19.3238s x0.29 from start)
            .. DONE!
            (leave) Compute the A-query                 [0.0580s x2.10] (19.3818s x0.30 from start)
            (enter) Compute the B-query                 [             ] (19.3818s x0.30 from start)
            Non-zero coordinate count: 8161/16323 (50.00%)
            (leave) Compute the B-query                 [0.1372s x3.31] (19.5190s x0.32 from start)
            (enter) Compute the H-query                 [             ] (19.5191s x0.32 from start)
            . DONE!
            (leave) Compute the H-query                 [0.0434s x2.83] (19.5625s x0.32 from start)
            (enter) Compute the L-query                 [             ] (19.5625s x0.32 from start)
            .. DONE!
            (leave) Compute the L-query                 [0.0665s x3.48] (19.6290s x0.34 from start)
          (leave) Generate queries                      [0.3052s x3.05] (19.6291s x0.34 from start)
        (leave) Generate R1CS proving key               [0.3063s x3.04] (19.6291s x0.34 from start)
        (enter) Generate R1CS verification key          [             ] (19.6291s x0.34 from start)
          (enter) Call to reduced_pairing<bn128_pp>     [             ] (19.6291s x0.34 from start)
            (enter) Call to pairing<bn128_pp>           [             ] (19.6291s x0.34 from start)
              (enter) Call to bn128_ate_precompute_G1           [             ] (19.6291s x0.34 from start)
              (leave) Call to bn128_ate_precompute_G1           [0.0000s x0.52] (19.6292s x0.34 from start)
              (enter) Call to bn128_ate_precompute_G2           [             ] (19.6292s x0.34 from start)
              (leave) Call to bn128_ate_precompute_G2           [0.0001s x35.49]        (19.6293s x0.34 from start)
              (enter) Call to miller_loop<bn128_pp>             [             ] (19.6293s x0.34 from start)
              (leave) Call to miller_loop<bn128_pp>             [0.0002s x0.93] (19.6295s x0.34 from start)
            (leave) Call to pairing<bn128_pp>           [0.0004s x11.10]        (19.6296s x0.34 from start)
            (enter) Call to bn128_final_exponentiation  [             ] (19.6296s x0.34 from start)
            (leave) Call to bn128_final_exponentiation  [0.0003s x0.95] (19.6299s x0.34 from start)
          (leave) Call to reduced_pairing<bn128_pp>     [0.0008s x6.58] (19.6299s x0.34 from start)
        (leave) Generate R1CS verification key          [0.0009s x6.32] (19.6300s x0.34 from start)
      (leave) Call to snark_for_complement_generator    [0.3958s x2.60] (19.6300s x0.34 from start)
      * G1 elements in PK: 57160
      * Non-zero G1 elements in PK: 48998
      * G2 elements in PK: 16324
      * Non-zero G2 elements in PK: 8162
      * PK size in bits: 17171252
      * G1 elements in VK: 0
      * G2 elements in VK: 2
      * GT elements in VK: 1
      * VK size in bits: 1018
    (leave) Generating snark key pair Generator [0.3959s x2.60] (19.6301s x0.34 from start)
    (enter) Compute p_vector for snark for filterring proving key       [             ] (19.6303s x0.34 from start)
    (leave) Compute p_vector for snark for filterring proving key       [4.1768s x1.00] (23.8072s x0.45 from start)
  (leave) Call to snark for filtering generator [4.6430s x1.16] (23.8072s x0.45 from start)
  * G1 elements in PK: 73483
  * Non-zero G1 elements in PK: 65321
  * G2 elements in PK: 16324
  * Non-zero G2 elements in PK: 8162
  * PK size in bits: 21333617
  * G1 elements in VK: 0
  * G2 elements in VK: 6
  * GT elements in VK: 1
  * VK size in bits: 1018
  * G1 elements in pp: 8161
  * G2 elements in pp: 0
  * GT elements in pp: 0
  * PP size in bits: 1018

  * Peak vsize (physical memory+swap) in mebibytes (after generator): 900

================================================================================
Generating Commitment
================================================================================

  (enter) Compute sigma Commitment              [             ] (23.8074s x0.45 from start)
  (leave) Compute sigma Commitment              [0.3226s x3.20] (24.1300s x0.49 from start)
  (enter) Compute C_x Commitment                [             ] (24.1300s x0.49 from start)
  (leave) Compute C_x Commitment                [0.0479s x1.69] (24.1779s x0.49 from start)

================================================================================
snark for filtering Prover
================================================================================

  (enter) Call to snark for filtering prover    [             ] (24.1780s x0.49 from start)
    (enter) Compute _C_x                        [             ] (24.1780s x0.49 from start)
    (leave) Compute _C_x                        [0.3705s x2.59] (24.5485s x0.52 from start)
    (enter) Compute ss_proof                    [             ] (24.5485s x0.52 from start)
    (leave) Compute ss_proof                    [0.4158s x2.53] (24.9643s x0.56 from start)
    (enter) Call to snark_for_complement_prover [             ] (24.9644s x0.56 from start)
      (enter) Compute the polynomial H                  [             ] (24.9644s x0.56 from start)
        (enter) Call to r1cs_to_qap_witness_map         [             ] (24.9644s x0.56 from start)
          (enter) Compute evaluation of polynomials A, B on set S       [             ] (24.9645s x0.56 from start)
          (leave) Compute evaluation of polynomials A, B on set S       [0.0010s x2.84] (24.9655s x0.56 from start)
          (enter) Compute coefficients of polynomial A  [             ] (24.9655s x0.56 from start)
          (leave) Compute coefficients of polynomial A  [0.0116s x2.58] (24.9771s x0.56 from start)
          (enter) Compute coefficients of polynomial B  [             ] (24.9771s x0.56 from start)
          (leave) Compute coefficients of polynomial B  [0.0130s x2.01] (24.9901s x0.56 from start)
          (enter) Compute ZK-patch                      [             ] (24.9901s x0.56 from start)
          (leave) Compute ZK-patch                      [0.0024s x2.39] (24.9925s x0.56 from start)
          (enter) Compute evaluation of polynomial A on set T   [             ] (24.9925s x0.56 from start)
          (leave) Compute evaluation of polynomial A on set T   [0.0142s x2.02] (25.0067s x0.56 from start)
          (enter) Compute evaluation of polynomial B on set T   [             ] (25.0068s x0.56 from start)
          (leave) Compute evaluation of polynomial B on set T   [0.0119s x2.16] (25.0186s x0.56 from start)
          (enter) Compute evaluation of polynomial H on set T   [             ] (25.0187s x0.56 from start)
            (enter) Compute evaluation of polynomial C on set S [             ] (25.0213s x0.56 from start)
            (leave) Compute evaluation of polynomial C on set S [0.0008s x1.02] (25.0221s x0.56 from start)
            (enter) Compute coefficients of polynomial C        [             ] (25.0221s x0.56 from start)
            (leave) Compute coefficients of polynomial C        [0.0103s x2.31] (25.0324s x0.56 from start)
            (enter) Compute evaluation of polynomial C on set T [             ] (25.0324s x0.56 from start)
            (leave) Compute evaluation of polynomial C on set T [0.0123s x2.20] (25.0447s x0.56 from start)
            (enter) Divide by Z on set T                [             ] (25.0484s x0.56 from start)
            (leave) Divide by Z on set T                [0.0004s x0.97] (25.0487s x0.56 from start)
          (leave) Compute evaluation of polynomial H on set T   [0.0301s x2.15] (25.0488s x0.56 from start)
          (enter) Compute coefficients of polynomial H  [             ] (25.0488s x0.56 from start)
          (leave) Compute coefficients of polynomial H  [0.0136s x2.23] (25.0624s x0.56 from start)
          (enter) Compute sum of H and ZK-patch         [             ] (25.0624s x0.56 from start)
          (leave) Compute sum of H and ZK-patch         [0.0036s x1.33] (25.0660s x0.56 from start)
        (leave) Call to r1cs_to_qap_witness_map         [0.1017s x2.17] (25.0661s x0.56 from start)
      (leave) Compute the polynomial H                  [0.1018s x2.17] (25.0662s x0.56 from start)
      (enter) Compute the proof                         [             ] (25.0662s x0.56 from start)
        (enter) Compute evaluation to A-query           [             ] (25.0662s x0.56 from start)
        (enter) Process scalar vector                   [             ] (25.0663s x0.56 from start)
          * Elements of w skipped: 8161 (50.00%)
          * Elements of w processed with special addition: 1 (0.01%)
          * Elements of w remaining: 8161 (50.00%)
        (leave) Process scalar vector                   [0.0004s x1.00] (25.0666s x0.56 from start)
        (leave) Compute evaluation to A-query           [0.0317s x1.29] (25.0979s x0.56 from start)
        (enter) Compute evaluation to B-query           [             ] (25.0979s x0.56 from start)
        (enter) Process scalar vector                   [             ] (25.0979s x0.56 from start)
          * Elements of w skipped: 567 (6.95%)
          * Elements of w processed with special addition: 0 (0.00%)
          * Elements of w remaining: 7594 (93.05%)
        (leave) Process scalar vector                   [0.0007s x2.05] (25.0987s x0.56 from start)
        (leave) Compute evaluation to B-query           [0.2483s x2.65] (25.3462s x0.58 from start)
        (enter) Compute evaluation to H-query           [             ] (25.3463s x0.58 from start)
        (leave) Compute evaluation to H-query           [0.0510s x3.64] (25.3973s x0.59 from start)
      (leave) Compute the proof                         [0.3321s x2.67] (25.3983s x0.59 from start)
    (leave) Call to snark_for_complement_prover [0.4340s x2.55] (25.3983s x0.59 from start)
    * G1 elements in proof: 2
    * G2 elements in proof: 1
    * Proof size in bits: 1019
  (leave) Call to snark for filtering prover    [1.2204s x2.56] (25.3984s x0.59 from start)
  * snark_for_filtering_proof size in bits: 1275

  * Peak vsize (physical memory+swap) in mebibytes (after prover): 900

================================================================================
snark for filtering Verifier
================================================================================

  (enter) Call to snark for filtering verifier  [             ] (25.3991s x0.59 from start)
    (enter) pairing computations                [             ] (25.3991s x0.59 from start)
      (enter) Call to reduced_pairing<bn128_pp>         [             ] (25.3991s x0.59 from start)
        (enter) Call to pairing<bn128_pp>               [             ] (25.3991s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G1       [             ] (25.3991s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G1       [0.0000s x1.08] (25.3991s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G2       [             ] (25.3991s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G2       [0.0001s x1.01] (25.3992s x0.59 from start)
          (enter) Call to miller_loop<bn128_pp>         [             ] (25.3992s x0.59 from start)
          (leave) Call to miller_loop<bn128_pp>         [0.0002s x1.00] (25.3994s x0.59 from start)
        (leave) Call to pairing<bn128_pp>               [0.0003s x1.00] (25.3994s x0.59 from start)
        (enter) Call to bn128_final_exponentiation      [             ] (25.3994s x0.59 from start)
        (leave) Call to bn128_final_exponentiation      [0.0003s x1.00] (25.3997s x0.59 from start)
      (leave) Call to reduced_pairing<bn128_pp>         [0.0006s x1.00] (25.3997s x0.59 from start)
      (enter) Call to reduced_pairing<bn128_pp>         [             ] (25.3997s x0.59 from start)
        (enter) Call to pairing<bn128_pp>               [             ] (25.3997s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G1       [             ] (25.3997s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G1       [0.0000s x1.04] (25.3997s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G2       [             ] (25.3997s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G2       [0.0001s x1.00] (25.3998s x0.59 from start)
          (enter) Call to miller_loop<bn128_pp>         [             ] (25.3998s x0.59 from start)
          (leave) Call to miller_loop<bn128_pp>         [0.0002s x1.00] (25.4000s x0.59 from start)
        (leave) Call to pairing<bn128_pp>               [0.0003s x1.00] (25.4000s x0.59 from start)
        (enter) Call to bn128_final_exponentiation      [             ] (25.4000s x0.59 from start)
        (leave) Call to bn128_final_exponentiation      [0.0003s x1.00] (25.4003s x0.59 from start)
      (leave) Call to reduced_pairing<bn128_pp>         [0.0006s x1.00] (25.4003s x0.59 from start)
      (enter) Call to reduced_pairing<bn128_pp>         [             ] (25.4003s x0.59 from start)
        (enter) Call to pairing<bn128_pp>               [             ] (25.4004s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G1       [             ] (25.4004s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G1       [0.0000s x1.03] (25.4004s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G2       [             ] (25.4004s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G2       [0.0001s x1.00] (25.4004s x0.59 from start)
          (enter) Call to miller_loop<bn128_pp>         [             ] (25.4005s x0.59 from start)
          (leave) Call to miller_loop<bn128_pp>         [0.0002s x1.00] (25.4006s x0.59 from start)
        (leave) Call to pairing<bn128_pp>               [0.0003s x1.00] (25.4006s x0.59 from start)
        (enter) Call to bn128_final_exponentiation      [             ] (25.4007s x0.59 from start)
        (leave) Call to bn128_final_exponentiation      [0.0003s x1.00] (25.4010s x0.59 from start)
      (leave) Call to reduced_pairing<bn128_pp>         [0.0006s x1.00] (25.4010s x0.59 from start)
      (enter) Call to reduced_pairing<bn128_pp>         [             ] (25.4010s x0.59 from start)
        (enter) Call to pairing<bn128_pp>               [             ] (25.4010s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G1       [             ] (25.4010s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G1       [0.0000s x1.03] (25.4010s x0.59 from start)
          (enter) Call to bn128_ate_precompute_G2       [             ] (25.4010s x0.59 from start)
          (leave) Call to bn128_ate_precompute_G2       [0.0001s x1.00] (25.4011s x0.59 from start)
          (enter) Call to miller_loop<bn128_pp>         [             ] (25.4011s x0.59 from start)
          (leave) Call to miller_loop<bn128_pp>         [0.0002s x1.00] (25.4013s x0.59 from start)
        (leave) Call to pairing<bn128_pp>               [0.0003s x1.00] (25.4013s x0.59 from start)
        (enter) Call to bn128_final_exponentiation      [             ] (25.4013s x0.59 from start)
        (leave) Call to bn128_final_exponentiation      [0.0003s x1.00] (25.4016s x0.59 from start)
      (leave) Call to reduced_pairing<bn128_pp>         [0.0006s x1.00] (25.4016s x0.59 from start)
      (enter) Check QAP divisibility                    [             ] (25.4016s x0.59 from start)
snark for filtering protocol: PASS
      (leave) Check QAP divisibility                    [0.0000s x1.02] (25.4016s x0.59 from start)
    (leave) pairing computations                [0.0025s x1.00] (25.4016s x0.59 from start)
    (enter) Call to snark_for_complement_verifier_weak_IC       [             ] (25.4016s x0.59 from start)
      (enter) Call to snark_for_complement_verifier_process_vk  [             ] (25.4016s x0.59 from start)
        (enter) Call to bn128_ate_precompute_G2         [             ] (25.4016s x0.59 from start)
        (leave) Call to bn128_ate_precompute_G2         [0.0001s x1.00] (25.4017s x0.59 from start)
      (leave) Call to snark_for_complement_verifier_process_vk  [0.0001s x1.01] (25.4017s x0.59 from start)
      (enter) Call to snark_for_complement_online_verifier_weak_IC      [             ] (25.4017s x0.59 from start)
        (enter) Check if the proof is well-formed       [             ] (25.4017s x0.59 from start)
        (leave) Check if the proof is well-formed       [0.0000s x1.09] (25.4017s x0.59 from start)
        (enter) Online pairing computations             [             ] (25.4017s x0.59 from start)
          (enter) Check QAP divisibility                [             ] (25.4017s x0.59 from start)
            (enter) Call to bn128_ate_precompute_G1     [             ] (25.4017s x0.59 from start)
            (leave) Call to bn128_ate_precompute_G1     [0.0000s x1.04] (25.4018s x0.59 from start)
            (enter) Call to bn128_ate_precompute_G2     [             ] (25.4018s x0.59 from start)
            (leave) Call to bn128_ate_precompute_G2     [0.0001s x1.00] (25.4018s x0.59 from start)
            (enter) Call to bn128_ate_precompute_G1     [             ] (25.4018s x0.59 from start)
            (leave) Call to bn128_ate_precompute_G1     [0.0000s x1.03] (25.4019s x0.59 from start)
            (enter) Call to miller_loop<bn128_pp>       [             ] (25.4019s x0.59 from start)
            (leave) Call to miller_loop<bn128_pp>       [0.0002s x2.37] (25.4020s x0.59 from start)
            (enter) Call to miller_loop<bn128_pp>       [             ] (25.4021s x0.59 from start)
            (leave) Call to miller_loop<bn128_pp>       [0.0002s x1.00] (25.4022s x0.59 from start)
            (enter) Call to bn128_final_exponentiation  [             ] (25.4022s x0.59 from start)
            (leave) Call to bn128_final_exponentiation  [0.0003s x1.00] (25.4026s x0.59 from start)
          (leave) Check QAP divisibility                [0.0008s x1.31] (25.4026s x0.59 from start)
        (leave) Online pairing computations             [0.0008s x1.30] (25.4026s x0.59 from start)
      (leave) Call to snark_for_complement_online_verifier_weak_IC      [0.0009s x1.29] (25.4026s x0.59 from start)
    (leave) Call to snark_for_complement_verifier_weak_IC       [0.0010s x1.26] (25.4026s x0.59 from start)
  (leave) Call to snark for filtering verifier  [0.0035s x1.07] (25.4026s x0.59 from start)

  * Peak vsize (physical memory+swap) in mebibytes (after verifier): 900
* The verification result is: PASS
(leave) Call to run_snark_for_filtering         [6.2385s x1.54] (25.4026s x0.59 from start)

================================================================================
(leave) Test Snark for Filtering
================================================================================